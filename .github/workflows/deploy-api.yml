name: Deploy API on port 80

on:
  push:
    branches:
      - main
      - Alex/Terraform
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-api.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: deploy-backend-session
        aws-region: ${{secrets.AWS_REGION}}

    # - name: Generate env.properties
    #   run: |
    #       cd backend
    #       echo "PORT_LOCAL=80" > env.properties 
    #       echo "MODE=production" >> env.properties
    #       echo "DB_USERNAME=${{ secrets.DB_USERNAME}}" >> env.properties
    #       echo "DB_PASSWORD=${{ secrets.DB_PASSWORD}}" >> env.properties
    #       echo "DB_NAME=${{ secrets.DB_NAME}}" >> env.properties
    #       echo "DB_ENDPOINT=${{ secrets.DB_ENDPOINT}}" >> env.properties
    #       echo "AWS_REGION=${{ secrets.AWS_REGION}}" >> env.properties
    #       echo "PORTAL_URL=${{secrets.PORTAL_URL}}" >> env.properties
    #       echo "API_URL=${{secrets.API_URL}}" >> env.properties

    # - name: Package artifact
    #   run: zip -r ./backend.zip env.properties .dockerignore *
    #   working-directory: backend

    # - name: list files
    #   run: |
    #       cd backend
    #       ls -la
          
    # - name: Upload artifact to S3
    #   run: |
    #     cd backend
    #     aws s3 cp backend.zip s3://${{ secrets.BUCKET_NAME_API }}/application-${{ github.run_id }}.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: deploy-server-session
          aws-region: ${{secrets.AWS_REGION}}

      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
            java-version: '21'
            distribution: 'oracle'
    
      - name: Build with Maven
        run: |
            mvn -B package --file pom.xml
          
      - uses: aws-actions/configure-aws-credentials@v4
        id: creds
        with:
            role-to-assume: ${{ secrets.AWS_ROLE }}
            aws-region: ${{ secrets.AWS_REGION }}
            output-credentials: true
            audience: sts.amazonaws.com
    
      - name: Set output
        id: vars
        run: |
            echo "tag=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_OUTPUT
            ls
    
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
            wait_for_deployment: false
            aws_access_key: ${{ steps.creds.outputs.aws-access-key-id }}
            aws_secret_key: ${{ steps.creds.outputs.aws-secret-access-key }}
            application_name: ${{secrets.API_WEB_APP_NAME}}
            environment_name: ${{secrets.API_WEB_ENV_NAME}}
            version_label: ${{ steps.vars.outputs.tag }}
            region: eu-west-1
            deployment_package: backend/target/backend-0.0.1-SNAPSHOT.jar